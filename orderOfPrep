1. var,let,const,this,hoisting,closure,objects,call,apply,bind, -> currying,debounce,throttle,inheritance,constructors
3. polyfills
3. promises, settimeout, setinterval and interview question before friday
cab: https://medium.com/developers-arena/how-to-create-a-polyfill-for-call-apply-and-bind-917ae110edc3
flux: https://www.javatpoint.com/react-flux-concept


pattern-> quick 3 day recap
followed by deep insights into each of them and every day recap
followed by constant discovering ineterview questions


system design and machine coding


web performance and optimization, metrics, web vitals and other theoritical stuffs


jsinfo all pages quick scan and questions




6. https://www.frontendinterviewhandbook.com/javascript-questions
7. bubbling: https://www.30secondsofcode.org/articles/s/javascript-event-bubbling-capturing-delegation

8. https://www.30secondsofcode.org/c/js-interviews/p/1
9. http://www.adequatelygood.com/tag/javascript/
10. https://github.com/sadanandpai/javascript-code-challenges/tree/main/challenges
11. roadside coder
12. js cafe, dev.aditya, React Developer Interview Series 
13. toptal 37 questions
14. promises and its api from roadside coder
15. web performance
16. ds and algo
17. interview questions
18. system design
19. machine coding
20. css
21. hooks polyfills
22. react fundamentals
23. globalization: https://www.freecodecamp.org/news/setting-up-internationalization-in-react-from-start-to-finish-6cb94a7af725/
24. ssr, nextjs
25. contextapi vs redux (thunk saga middle ware)
26. react plugins
27. chrome extention
28. style comp adv
29. eventloop
30. map, reduce polyfill
31. position css
32. flexbox responsiveness
33. display properties css
34. hooks details
35. virtual dom
36. redux architechure
37. closure for pvt variables hide access to internal variables
38. flux arhitecture
39. browser engines 
40. how are we deploying
41. code quality
42. why react is better
43. useMemo, useCallback
44. hoc, why?
45. typescript crash crouse
46. team lead responsibilities
47. crash course -> ssr(nextjs), pwa, reactNative, flex responsive css, microFrontend
48. cover webpack: https://webpack.js.org/guides/tree-shaking/
49. react optimization techniques
50. custom hooks
51. lazy loading
52. react theme
53. typeahead
54. mocks prep: https://www.frontendinterviewhandbook.com/companies/airbnb-front-end-interview-questions/
55. event loop: https://www.youtube.com/watch?v=cCOL7MC4Pl0
56. promise & its polyfills
57. This: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this#as_an_object_method
58. 500 interview question: https://github.com/sudheerj/javascript-interview-questions#what-is-debouncing
59. 123 output based question: https://github.com/ganqqwerty/123-Essential-JavaScript-Interview-Questions/blob/master/README.md
60. 155 questions: https://github.com/lydiahallie/javascript-questions
61. 60 repo matching JS interview questions: https://github.com/topics/javascript-interview-questions


Level 1
hooks & its polyfills
useState polyfill: https://www.youtube.com/playlist?list=PLrOmLLDpZg9PMOZdk3LNlp1g5xM0KL1Hf
react optimization
virtual dom
class lifecycle
Revise: var,let,const,this,hoisting,closure,objects,call,apply,bind,currying,debounce,throttle,inheritance,constructors, promises, polyfills, settimeouts, setintervals and related problems
why customhooks and not normal function: https://www.reactshark.com/blog/customhooks-vs-normalfunctions
why useCallback: https://www.w3schools.com/react/react_usecallback.asp#:~:text=One%20reason%20to%20use%20useCallback,in%20the%20React.memo%20section.
why reactQuery: Codevolution


Level 2
Level 3

https://hygraph.com/blog/nextjs-vs-react
Projects
chrome extensions
chat ui full stack
microservices in frontend
typescript
